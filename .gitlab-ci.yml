default:
    image: osnvr/os-nvr_ci

cache: &global_cache
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - node_modules/
        - .cache/

run:
    artifacts:
        reports:
            cobertura: ./coverage/*.xml
            junit: ./coverage/report/*.xml
    script:
        - |
            # Setup.
            export GOPATH="$CI_PROJECT_DIR/.cache/GOPATH:$GOPATH"
            export GOCACHE="$CI_PROJECT_DIR/.cache/GOCACHE"
            export GOLANGCI_LINT_CACHE=$CI_PROJECT_DIR/.cache/GOLANGCI

            # Get changed files.
            git remote add upstream https://gitlab.com/osnvr/os-nvr.git
            git fetch upstream dev
            git diff --name-only upstream/dev $CI_COMMIT_SHA
            files_changed="$(git diff --name-only upstream/dev $CI_COMMIT_SHA)"

            if [ $files_changed == "" ]; then
                files_changed="$(git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA)"
            fi


            # Do not format if "no_fmt" is set.
            if [ "${no_fmt}" != "" ]; then
                ./utils/ci.sh "$files_changed"
            elif [ "${GIT_PUSH_TOKEN}" == "" ]; then
                printf "access token not found, formatting disabled\\n"
                ./utils/ci.sh "$files_changed"
            else
                # Run ci, including formatting.
                ./utils/ci-fmt.sh "$files_changed"

                git checkout "${CI_COMMIT_REF_NAME}"
                git checkout ./go.mod ./go.sum ./package.json ./package-lock.json
                git status -s

                # If no files were modified during formatting.
                files="$(git status -s | wc -l)"
                if [ "$files" == 0 ]; then
                    exit 0
                fi

                # Push formatted code.
                printf "committing\\n"
                git status -s
                git config --global user.name "${GITLAB_USER_ID}"
                git config --global user.email "${GITLAB_USER_EMAIL}"
                git add .
                git commit --amend --no-edit --allow-empty
                git push -f "https://${GITLAB_USER_NAME}:${GIT_PUSH_TOKEN}@${CI_REPOSITORY_URL#*@}"
            fi
